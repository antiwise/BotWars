Welcome to BOT-WARS
The battle of AI!


This is a battle for the members of Kirupa.com, but anyone is welcome to try.
http://www.kirupa.com/forum/showthread.php?371555-BOT-wars!

2012 03 27
/lnsiu

------


The goal for YOU is to write an AI-bot, clever enough to be the last AI standing in a one-on-one gun fight.

Two BOTs has already been prepared for you. mrGreen and mrBlack.
They are fearsome, but not unbeatable...

How to:

Download the three as3 files, place all .as files in the same folder and load FlashBot.as as the documentClass. Run the project. You should have two bots fighting each other.
Rewrite one of the bots classes to suit your ideas about the best AI. Submit in the kirupa.com thread and we will figure out a fair way to test your BOT later.

RULES:

-Winning bot has most energy left when one bot pass below zero.
-The two bots fight on an area of 500x500 pixels.
-At start, each bot has 10000 units of energy.
-the cost of firing a bullet: 15 units
-being hit by a bullet: -150 units.
-reload takes 10 turns
-each travel in distance, cost the same amount in energy units.
-maximum distance per turn is 2.
-food containing energy units is placed after 200 turns.
-food contains 1000 units and will be received once "eaten". 
-shooting on food will decrease the foodvalue with 25 units
-Your AI should only use the public vars provided in the bot-classes for interaction with the war zone.

TIPS:

-Aiming is done on a location basis. Aiming at coordinate 0,0 will fire a bullet at 0,0 from you bots location.
-Movement is relatively defined and exceeding the allowed amount of 2 units in distance will ignore the desired movement.
-Moving outside the bounds of 500x500 will gently force you back to the war area. No penalty.

GITHUB TASKS:

create motion prediction class that predicts opponents motion.
	-record motion for each opponent
	-project previous motion to future motion
	-vary outcome by randomize order of previous motion
	-collect outcome on a prediction map

create aiming class that shoots at the correct position according to motion prediction map.
	-predict best possible outcome of bullet based on prediction map